{"version":3,"sources":["webpack:///./src/components/PostTag/PostTag.jsx","webpack:///./src/layout/Page.jsx","webpack:///./src/components/InputBox/index.jsx","webpack:///./src/components/PageSearch/search.js","webpack:///./src/components/PageSearch/SearchBox.jsx","webpack:///./src/templates/ArchivePage.jsx","webpack:///./src/components/PostBox/PostBox.jsx"],"names":["StyledLink","Link","StyledDiv","PostTag","props","to","kebabCase","tag","sx","border","borderColor","borderRadius","backgroundColor","color","undefined","count","lineHeight","window","global","document","Wrapper","Content","Layout","children","activeTag","rel","as","href","RangaFont","type","crossOrigin","RobotoFont","Label","Input","InputField","labelName","name","id","placeholder","handleInput","value","inputRef","useRef","boxShadow","ref","onChange","htmlFor","onClick","current","focus","KMPcheck","txt","pattern","length","j","next","ans","i","charAt","push","getPrefix","search","_val","querySelectorAll","forEach","item","removeAttribute","val","toLowerCase","getAttribute","tags","split","category","some","el","setAttribute","InPageSearchBox","useState","inputVal","setInput","InputBox","e","target","WrapperCenter","Posts","posts","pageContext","SEO","title","isBlogPost","SearchBox","map","post","key","search-name","search-tags","join","search-category","display","PostBox","StyledPostBox","fields","slug","intro","date","timeToRead","className","fontSize","fontWeight","fontStyle","backgroundSize","backgroundImage","backgroundRepeat","transition","paddingRight","my","paddingLeft","flexFlow","index"],"mappings":"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","file":"component---src-templates-archive-page-jsx-e5b8777a1db750cefac5.js","sourcesContent":["/**@jsx jsx */\nimport { jsx } from 'theme-ui';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport kebabCase from 'lodash/kebabCase';\nimport { Link } from 'gatsby';\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  height: 25px;\n  text-align: center;\n  padding: 0 10px;\n  transition: color 100ms ease-out;\n  font-size: 14px;\n`;\n\nconst StyledDiv = styled.div`\n  margin-left: 5px;\n  display: inline-block;\n  height: 16px;\n  text-align: center;\n  min-width: 25px;\n  padding-left: 2px;\n  padding-right: 2px;\n  font-size: 12px;\n  font-weight: bold;\n  border-radius: 1rem;\n`;\n\nexport default function PostTag(props) {\n  return (\n    <StyledLink\n      to={`/tags/${kebabCase(props.tag)}`}\n      sx={{\n        border: '1px solid',\n        borderColor: 'offblack',\n        borderRadius: 1,\n        backgroundColor: 'background',\n        color: 'offblack',\n        '&:hover': {\n          color: 'primary',\n          borderColor: 'primary',\n        },\n      }}\n    >\n      {props.tag}\n      {props.count !== undefined && (\n        <StyledDiv\n          sx={{\n            color: 'white',\n            backgroundColor: 'primary',\n          }}\n        >\n          <p\n            sx={{\n              lineHeight: 'dense',\n            }}\n          >\n            {props.count}\n          </p>\n        </StyledDiv>\n      )}\n    </StyledLink>\n  );\n}\n","// global layout of all pages\nimport React, { Fragment } from 'react';\nimport styled from '@emotion/styled';\nimport { Helmet } from 'react-helmet';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport RangaFont from '../../static/fonts/ranga.woff2';\nimport RobotoFont from '../../static/fonts/roboto.woff2';\nimport GlobalStyles from '../global';\nimport '../styles/fonts.scss';\n\n// ssr workaround\nif (typeof window === 'undefined') {\n  global.window = {};\n  global.document = {};\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  position: relative;\n`;\n\nconst Content = styled.main`\n  flex: 1;\n  margin: calc(3em + 3vh) 0px;\n  padding-bottom: 3rem;\n  position: relative;\n  z-index: 1;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr minmax(8em, 40em) 1fr 1fr 1fr;\n  grid-auto-flow: dense;\n  grid-auto-rows: max-content;\n  gap: 0px 4vw;\n`;\n\nexport default function Layout(props) {\n  const { children, activeTag } = props;\n  // need outer container: https://stackoverflow.com/questions/1709442/make-divs-height-expand-with-its-content\n  // https://dev.to/hzburki/100-height-to-all-divs-gatsby-33nd\n  // https://github.com/gatsbyjs/gatsby/issues/7310\n  return (\n    <>\n      <>\n        <Helmet>\n          {/* preload font to accelerate loading\n         https://github.com/gatsbyjs/gatsby/issues/13074\n          */}\n          <link\n            rel=\"preload\"\n            as=\"font\"\n            href={RangaFont}\n            type=\"font/woff2\"\n            crossOrigin=\"anonymous\"\n          />\n          <link\n            rel=\"preload\"\n            as=\"font\"\n            href={RobotoFont}\n            type=\"font/woff2\"\n            crossOrigin=\"anonymous\"\n          />\n        </Helmet>\n      </>\n      <GlobalStyles />\n      <Wrapper>\n        <Header activeTag={activeTag} />\n        <Content>{children}</Content>\n        <Footer />\n      </Wrapper>\n    </>\n  );\n}\n","/**@jsx jsx */\nimport { jsx } from 'theme-ui';\nimport React, { useRef } from 'react';\nimport styled from '@emotion/styled';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 2rem 0;\n  padding: 1rem 2rem;\n  border: 1px solid;\n  border-radius: 4px;\n  height: 80px;\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  transition: all ease-in 200ms;\n  touch-action: manipulation;\n  text-transform: uppercase;\n  position: absolute;\n  top: 0.5rem;\n  left: 2rem;\n`;\n\nconst Input = styled.input`\n  transition: all ease-in 200ms;\n  touch-action: manipulation;\n  margin-top: 1rem;\n  font-size: 1.2rem;\n  border: 0;\n  appearance: none;\n  background: transparent;\n  border-radius: 0;\n  height: 40px;\n  text-overflow: ellipsis;\n  cursor: text;\n  &:focus {\n    outline: 0;\n  }\n\n  &:placeholder-shown + label {\n    cursor: text;\n    font-weight: 400;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    transform-origin: left bottom;\n    transform: translate(0, 2rem) scale(1.5);\n  }\n\n  &::placeholder {\n    opacity: 0;\n    transition: inherit;\n  }\n\n  &:focus::placeholder {\n    opacity: 1;\n  }\n  &:not(:placeholder-shown) + label,\n  &:focus + label {\n    transform-origin: left bottom;\n    transform: translate(0, 0) scale(0.7);\n    cursor: default;\n  }\n`;\n\nconst InputField = ({ labelName, type, name, id, placeholder, handleInput, value }) => {\n  const inputRef = useRef(null);\n  return (\n    <Wrapper\n      sx={{\n        backgroundColor: 'white',\n        color: 'black',\n        borderColor: 'gray',\n        boxShadow: 'floating',\n        '&:focus-within': {\n          borderColor: 'primary',\n          boxShadow: 'highlight',\n        },\n      }}\n    >\n      <Input\n        ref={inputRef}\n        type={type}\n        name={name}\n        id={id}\n        placeholder={placeholder}\n        onChange={handleInput}\n        value={value}\n        sx={{\n          color: 'black',\n        }}\n      />\n      <Label\n        htmlFor={name}\n        onClick={() => {\n          inputRef.current.focus();\n        }}\n      >\n        {labelName}\n      </Label>\n    </Wrapper>\n  );\n};\n\nexport default InputField;\n","/**\n * compute longest prefix-suffix array for KMP algorithm\n * @param {string} pattern\n */\nfunction getPrefix(pattern) {\n  // base case for 1-length pattern\n  const ans = [0];\n  for (let i = 1; i < pattern.length; i += 1) {\n    let j = ans[i - 1];\n    while (j > 0 && pattern.charAt(i) !== pattern.charAt(j)) {\n      // if not then reset to previous state\n      j = ans[j - 1];\n    }\n    if (pattern.charAt(i) === pattern.charAt(j)) {\n      j += 1;\n    }\n    ans.push(j);\n  }\n  return ans;\n}\n\n/**\n * KMP algorithm\n * @param {string} txt\n * @param {string} pattern\n */\nfunction KMPcheck(txt, pattern) {\n  if (pattern.length === 0) {\n    return 0;\n  }\n  let j = 0;\n  const next = getPrefix(pattern);\n  for (let i = 0; i < txt.length; i += 1) {\n    while (j > 0 && txt.charAt(i) !== pattern.charAt(j)) {\n      j = next[j - 1];\n    }\n    if (txt.charAt(i) === pattern.charAt(j)) {\n      j += 1;\n      if (j === pattern.length) {\n        return i - j + 1;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction showAll() {\n  // get all searchable Elements\n  const items = document.querySelectorAll('li[search-name]');\n  // only show matched Elements\n  items.forEach((item) => {\n    item.removeAttribute('aria-hidden');\n  });\n}\n\n// Search by name and tag\nfunction search(_val) {\n  if (!_val || _val.length < 1) {\n    showAll();\n  }\n  const val = _val.toLowerCase();\n  // get all searchable Elements\n  const items = document.querySelectorAll('li[search-name]');\n  // only show matched Elements\n  items.forEach((item) => {\n    const name = item.getAttribute('search-name').toLowerCase();\n    const tags = item\n      .getAttribute('search-tags')\n      .toLowerCase()\n      .split(' ');\n    const category = item.getAttribute('search-category').toLowerCase();\n    if (\n      KMPcheck(name, val) >= 0 ||\n      KMPcheck(category, val) >= 0 ||\n      tags.some((el) => {\n        return KMPcheck(el, val) >= 0;\n      })\n    ) {\n      item.removeAttribute('aria-hidden');\n    } else {\n      item.setAttribute('aria-hidden', true);\n    }\n  });\n}\n\nexport default search;\n","import React, { useState } from 'react';\nimport InputBox from '../InputBox';\nimport search from './search';\n\nconst InPageSearchBox = () => {\n  const [inputVal, setInput] = useState('');\n\n  return (\n    <InputBox\n      placeholder=\"tag or title or category\"\n      name=\"post search\"\n      type=\"text\"\n      labelName=\"Search\"\n      handleInput={(e) => {\n        setInput(e.target.value);\n        search(e.target.value);\n      }}\n      value={inputVal}\n    />\n  );\n};\n\nexport default InPageSearchBox;\n","/**@jsx jsx */\nimport { jsx } from 'theme-ui';\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport Layout from '../layout/Page';\nimport SearchBox from '../components/PageSearch/SearchBox';\n\nimport PostBox from '../components/PostBox/PostBox';\nimport SEO from '../components/SEO/SEO';\n\nconst WrapperCenter = styled.section`\n  grid-column: 3 / -3;\n`;\n\nconst Posts = ({ pageContext: { posts } }) => {\n  return (\n    <Layout activeTag={'posts'}>\n      <SEO title=\"Posts\" isBlogPost={false} />\n      <WrapperCenter>\n        <SearchBox />\n        <h3>All Posts</h3>\n        <ul>\n          {posts.map(({ post }) => {\n            return (\n              <li\n                key={post.title}\n                search-name={post.title}\n                search-tags={post.tags.join(' ')}\n                search-category={post.category}\n                sx={{\n                  '&[aria-hidden]': {\n                    display: 'none',\n                  },\n                }}\n              >\n                <PostBox post={post} />\n              </li>\n            );\n          })}\n        </ul>\n      </WrapperCenter>\n    </Layout>\n  );\n};\n\nexport default Posts;\n","/**@jsx jsx */\nimport { jsx } from 'theme-ui';\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Tag from '../PostTag/PostTag';\nimport kebabCase from 'lodash/kebabCase';\nimport styled from '@emotion/styled';\n\nconst StyledPostBox = styled.div`\n  margin-top: 1rem;\n  box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  min-height: 133px;\n  padding-left: 1.6rem;\n  padding-right: 1rem;\n  padding-top: 0.5rem;\n  padding-bottom: 1.1rem;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-evenly;\n  transition: all 200ms ease-in;\n  &:hover {\n    transform: translateY(-4px);\n  }\n  .row1 {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n  }\n  .row2 {\n    margin-top: 0.3rem;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: center;\n  }\n  > .row3 {\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: space-around;\n  }\n`;\n\nexport default function PostBox({ post }) {\n  const fields = post.fields || {};\n  const slug = post.slug || fields.slug;\n  const title = post.title || fields.title;\n  const intro = post.intro;\n  const tags = post.tags || fields.tags || [];\n  const category = post.category || fields.category || 'MISC';\n  const date = post.date || fields.date;\n  const timeToRead = post.timeToRead || null;\n  return (\n    <StyledPostBox\n      sx={{\n        backgroundColor: 'offwhite',\n      }}\n    >\n      <div className=\"row1\">\n        <div>\n          <Link\n            to={`/categories/${kebabCase(category)}`}\n            sx={{\n              fontSize: 1,\n              color: 'black',\n              fontWeight: 'semibold',\n              fontStyle: 'italic',\n              '&:hover': {\n                color: 'primary',\n              },\n            }}\n          >\n            <h3>{category}</h3>\n          </Link>\n        </div>\n        {timeToRead && (\n          <div\n            sx={{\n              fontSize: 1,\n              color: 'offblack',\n            }}\n          >\n            <p>{timeToRead} min read</p>\n          </div>\n        )}\n      </div>\n      <div className=\"row2\">\n        <Link\n          to={`/post/${slug}`}\n          sx={{\n            color: 'black',\n            fontSize: 4,\n            '&:hover>h2': {\n              backgroundSize: '77% 100%',\n            },\n            '&>h2': {\n              display: 'inline',\n              backgroundImage:\n                'linear-gradient(to bottom,transparent 50%,hsl(260, 100%, 80%) 50%,hsl(260, 100%, 80%) 85%,transparent 85%,transparent 100%)',\n              backgroundRepeat: 'no-repeat',\n              backgroundSize: '0 100%',\n              transition: '.5s cubic-bezier(.6,.04,.35,1)',\n            },\n          }}\n        >\n          <h2>{title}</h2>\n        </Link>\n        <div\n          sx={{\n            paddingRight: '0.5rem',\n            fontSize: 1,\n            color: 'offblack',\n          }}\n        >\n          <small>{date}</small>\n        </div>\n      </div>\n      <div\n        className=\"intro\"\n        sx={{\n          my: 5,\n        }}\n      >\n        {intro}\n      </div>\n      <div className=\"row3\">\n        <div>\n          <span\n            sx={{\n              color: 'offblack',\n              fontSize: 0,\n              fontWeight: 'lighter',\n            }}\n          >\n            Tags:\n          </span>\n          <ul\n            sx={{\n              paddingLeft: 1,\n              display: 'inline-flex',\n              flexFlow: 'row wrap',\n            }}\n          >\n            {tags.length > 0 &&\n              tags.map((tag, index) => {\n                return (\n                  <li\n                    key={index}\n                    sx={{\n                      paddingLeft: 1,\n                    }}\n                  >\n                    <Tag tag={tag} />\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </StyledPostBox>\n  );\n}\n"],"sourceRoot":""}