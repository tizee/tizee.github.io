{"componentChunkName":"component---src-templates-post-jsx","path":"/post/61767c73f68a78612f055915da7f6768","result":{"data":{"post":{"id":"19d02318-14aa-566c-bf3c-e824e3666be7","excerpt":"DOM stands for Document Object Model and BOM stands for Browser Object Model. DOM Level 1 DOM level 1 specification is separated intoâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"DOM Levels\",\n  \"date\": \"2019-10-08\",\n  \"category\": \"web dev\",\n  \"tags\": [\"dom\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"DOM stands for Document Object Model and BOM stands for Browser Object Model.\"), mdx(\"h3\", null, \"DOM Level 1\"), mdx(\"p\", null, \"DOM level 1 specification is separated into 2 parts: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CORE\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HTML\"), \".\"), mdx(\"h4\", null, \"Core Level 1\"), mdx(\"p\", null, \"Core Level 1 provides a low-level set of fundamental interfaces that could represent any structured document.\"), mdx(\"h4\", null, \"Html level 1\"), mdx(\"p\", null, \"Html level 1 provides additional, higher-level interfaces that are used with the fundamental interfaces defined in Core level 1 to provide more convenient view of an HTML document.\"), mdx(\"h4\", null, \"Interfaces\"), mdx(\"p\", null, \"Interfaces introduced in DOM1 include, among others, the Document, Node, Attr, Element, and Text interfaces.\"), mdx(\"h3\", null, \"DOM Level 2\"), mdx(\"p\", null, \"First released in 2000.\"), mdx(\"p\", null, \"The DOM level 2 contains 6 different specifications: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The DOM2 Core\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Views\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Events\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Style\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Traversal and Range\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DOM2 Html\"), \".\"), mdx(\"h4\", null, \"The DOM2 Core\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-2-Core/\"\n  }), \"The DOM2 core\"), \" extends the functionality of the DOM1 Core. For instance, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getElementById\"), \" method was introduced in DOM2 core.\"), mdx(\"h4\", null, \"Views\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-2-Views/\"\n  }), \"The DOM2 Views\"), \" allows programs and scripts to access and update the html content (the representation of the document) dynamically. The introduced interfaces are AbstractView and DocumentView.\"), mdx(\"h4\", null, \"Events\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-2-Events/\"\n  }), \"The DOM2 Events\"), \" introduces a generic event system to programs and scripts. It includes the concepts of event flow, capture, bubbling, and cancellation. For example, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addEventListener\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handleEvent\"), \" are introduced in DOM2 Events methods.\"), mdx(\"p\", null, \"However, it does not include an interface for the keyboard events, which will be dealt with in later versions of the DOM.\"), mdx(\"h4\", null, \"Style\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-2-Style/\"\n  }), \"The DOM2 CSS\"), \" allows programs and scripts to access and update the content of style sheets dynamically. So it has interfaces for Style Sheets(CSS2 properties).\"), mdx(\"h4\", null, \"Traversal and Range\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-2-Traversal-Range/\"\n  }), \"The DOM2 Traversal and Range\"), \" allows programs and scripts to traverse and identify a range of content in a document dynamically.\"), mdx(\"p\", null, \"The DOM2 Traversal provides interfaces like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NodeIterator\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TreeWalker\"), \" to easily traverse the content of a document.\"), mdx(\"p\", null, \"THe DOM2 Range allows the creation, insertion, modification, and deletion of a range of content in a document, document fragment or attr.\"), mdx(\"h4\", null, \"DOM2 Html\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-2-HTML/\"\n  }), \"The DOM2 Html\"), \" allows programs and scripts to access and update the structure of a html document.\"), mdx(\"h3\", null, \"DOM level 3\"), mdx(\"p\", null, \"First released in 2004.\"), mdx(\"p\", null, \"The DOM3 specification contains 5 different specifications: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The DOM3 CORE\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Load and Save\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Validation\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Events\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XPath\"), \".\"), mdx(\"h4\", null, \"DOM3 Core\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-3-Core/\"\n  }), \"The DOM3 Core\"), \" step further on the fundamental of DOM1 and DOM2 Core's functionality.\"), mdx(\"h4\", null, \"Load and Save\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-3-LS/\"\n  }), \"The DOM3 Load and Save\"), \" is for dynamic loading content of XML document in a HTML document and serializing a HTML document to a XML document.\"), mdx(\"h4\", null, \"Validation\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-3-Val/\"\n  }), \"The DOM3 Validation\"), \" allows programs and scripts to dynamically update the content and the structure of documents while ensuring that the document remains valid, or to ensure that the document becomes valid.\"), mdx(\"h4\", null, \"Events\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-3-Events/\"\n  }), \"The DOM3 Events\"), \" is the extension of the DOM2 events specification. It mainly focuses keyboard events and how to handle them.\"), mdx(\"h4\", null, \"XPath\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/TR/DOM-Level-3-XPath/\"\n  }), \"The DOM3 XPath\"), \" provides functionalities to use XPath to access DOM tree.\"), mdx(\"h3\", null, \"reference\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/fr/docs/DOM_Levels\"\n  }), \"Fabian Guisset's MDN DOM levels\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"date":"2019-10-08","title":"DOM Levels","category":"web dev","tags":["dom"],"slug":"61767c73f68a78612f055915da7f6768"},"timeToRead":2,"tableOfContents":{"items":[{"url":"#dom-level-1","title":"DOM Level 1","items":[{"url":"#core-level-1","title":"Core Level 1"},{"url":"#html-level-1","title":"Html level 1"},{"url":"#interfaces","title":"Interfaces"}]},{"url":"#dom-level-2","title":"DOM Level 2","items":[{"url":"#the-dom2-core","title":"The DOM2 Core"},{"url":"#views","title":"Views"},{"url":"#events","title":"Events"},{"url":"#style","title":"Style"},{"url":"#traversal-and-range","title":"Traversal and Range"},{"url":"#dom2-html","title":"DOM2 Html"}]},{"url":"#dom-level-3","title":"DOM level 3","items":[{"url":"#dom3-core","title":"DOM3 Core"},{"url":"#load-and-save","title":"Load and Save"},{"url":"#validation","title":"Validation"},{"url":"#events-1","title":"Events"},{"url":"#xpath","title":"XPath"}]},{"url":"#reference","title":"reference"}]}}},"pageContext":{"id":"19d02318-14aa-566c-bf3c-e824e3666be7","previous":{"post":{"id":"6e6c73c6-754e-559b-bd46-9cf1371fc25b","parent":{"id":"5d69b77d-1a97-5498-bafd-d220ec8abc4e"},"excerpt":"MVC MVC is the shorthand for Model-View-Controller and you may be familar with Java's  Spring MVC  web framework. It's a useful designâ€¦","slug":"d2279c490c5084abe98964320696b38c","title":"MVVM and MVC","tags":["design patterns"],"category":"web dev","date":"2019-10-05"}},"next":{"post":{"id":"6bf50e4c-a8a4-5af6-af7d-fc0201d193cb","parent":{"id":"68eb9d39-49f9-54db-918f-e9740aa50675"},"excerpt":"If you have learnt computer networking course in the school, you would be familiar with the fact that the Http is an application layerâ€¦","slug":"1af315af5bdbb860168f4640adb1e71d","title":"From http1 to http3","tags":["http"],"category":"web dev","date":"2019-10-09"}}}}}