{"componentChunkName":"component---src-templates-post-jsx","path":"/post/39718281141d7b0416200fc63d121fb5","result":{"data":{"post":{"id":"25aa7610-5489-592f-bdf5-4a964f042183","excerpt":"This is my first post about configuration stuff. In my opinion, configuring always consumes more time than coding.  Another option for…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Deploy DevDocs running locally on Linux as service\",\n  \"date\": \"2020-03-05\",\n  \"category\": \"configs\",\n  \"tags\": [\"Linux\", \"Linux service\", \"rapsberry pi\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is my first post about configuration stuff. In my opinion, configuring always consumes more time than coding. \"), mdx(\"h2\", null, \"Another option for Windows/macOS\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kapeli.com\"\n  }), \"Dash\"), \" is another possible option for mac users if you don't want to spend lots of time on configuring stuff. BTW, Dash is not \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"FREE\"), \" though you could download and use it for free \\uD83D\\uDE00.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://velocity.silverlakesoftware.com\"\n  }), \"Velocity\"), \" is like Dash in Windows. It is also like Dash in the way that it's not free.\"), mdx(\"h2\", null, \"Install dependencies\"), mdx(\"p\", null, \"You could follow the official instructions on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/freeCodeCamp/devdocs\"\n  }), \"DevDocs's github repo\"), \" to deploy DevDocs on your local machine.\"), mdx(\"p\", null, \"First, make sure you have installed \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ruby\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"curl\"), \" and a JavaScript runtime supported by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ExecJS\"), \" (You could always choose Nodejs as your first option).\"), mdx(\"p\", null, \"For the sake of saving keystrokes, I running all following commands \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"as root\"), \".\"), mdx(\"h3\", null, \"ruby\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# ruby-2.6.5 is required by app\\n# here I use rvm to manage different versions of rubies and it is like nvm for nodeJS\\n\\n# 1. install gpg keys\\n# you need to check out https://rvm.io for latest gpg keys\\n# 2. install rvm\\n\\\\curl -sSL https://get.rvm.io | bash -s stable\\n# 3. install ruby\\nrvm install 2.6.5  \\n# configuration stuff bala bala if you do not installed rvm as root\\n# for example, you need to add `source ~/.rvm/scripts/rvm` to your .bashrc\\n\")), mdx(\"p\", null, \"Then you could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ruby --version\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rvm list\"), \" to check its installation.\"), mdx(\"h3\", null, \"curl\"), mdx(\"p\", null, \"If you are a Linux user, the system may has already installed \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"curl\"), \" e.g. Ubuntu. You could check it use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"which curl\"), \".\"), mdx(\"p\", null, \"If not, please google how to install it with your system package manager.\"), mdx(\"h3\", null, \"Nodejs\"), mdx(\"p\", null, \"Please go to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nodejs.org/en/download/\"\n  }), \"nodejs website\"), \" and choose a suitable binary/Installer for your platform.\"), mdx(\"p\", null, \"Here I install Node binary files directly. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"mkdir -p node && tar -xvf node-v12.16.1-linux-armv7l.tar.xz -C node --strip-components 1\\n# install nodejs\\ncp -rvf node/* /usr/\\n\")), mdx(\"p\", null, \"Here is a reference if something goes wrong \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/20028996/how-to-install-node-binary-distribution-files-on-linux\"\n  }), \"how-to-install-node-binary-distribution-files-on-linux\")), mdx(\"h2\", null, \"Running as a Linux service\"), mdx(\"h3\", null, \"follow official quick start\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git clone https://github.com/freeCodeCamp/devdocs.git && cd devdocs\\ncd devdocs\\ngem install bundler\\nbundle install\\nbundle exec thor docs:download --default\\n\")), mdx(\"p\", null, \"If you do not want running it as a Linux service, it's done here.\"), mdx(\"h3\", null, \"Create new linux service with systemd\"), mdx(\"p\", null, \"You could create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"devdocs.service\"), \" file under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/systemd/service/\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/lib/systemd/system/\"), \" provided by linux distribution.\"), mdx(\"p\", null, \"Here is the unit configuration file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"devdocs.service\"), \".  You should change following path according to your installation.\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"which\"), \" to locate path to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bundle\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rackup\"), \". You should be careful that the ruby you get from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"which ruby\"), \" doesn't include environment. Insead, you should use ruby under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/path/to/rvm/gems/ruby-version/wrappers/\"), \".\"), mdx(\"p\", null, \"Otherwise you may encounter ruby_executeable_hooks error. Here is the reference\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/26247926/how-to-solve-usr-bin-env-ruby-executable-hooks-no-such-file-or-directory\"\n  }), \"how-to-solve-usr-bin-env-ruby-executable-hooks-no-such-file-or-directory\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"[Unit]\\nDescription=devdocs in raspberry pi\\n\\n[Service]\\nType=simple\\nSyslogIdentifier=devdocs-pi\\nUser=root\\nPIDFile=/home/pi/devdocs.pid\\nEnvironment=BUNDLE_GEMFILE=/home/pi/devdocs/Gemfile\\nExecStart=/usr/local/rvm/gems/ruby-2.6.5/wrappers/ruby /usr/local/rvm/gems/ruby-2.6.5/bin/bundle exec /usr/local/rvm/gems/ruby-2.6.5/bin/rackup /home/pi/devdocs/config.ru --host 192.168.50.136 --port 9292\\nExecReload=/usr/local/rvm/gems/ruby-2.6.5/wrappers/ruby /usr/local/rvm/gems/ruby-2.6.5/bin/bundle exec /usr/local/rvm/gems/ruby-2.6.5/bin/rackup /home/pi/devdocs/config.ru --host 192.168.50.136 --port 9292\\nExecStop=/bin/kill -s QUIT $MAINPID\\nRestart=always\\n\\n[Install]\\nWantedBy=multi-user.target\\n\")), mdx(\"h3\", null, \"Fix some path error in files\"), mdx(\"p\", null, \"At first I do not setup \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WorkingDirectory\"), \" in unit configuration file so there are some files under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"devdocs/lib\"), \" with relative path import that would cause issues. The solution I took was to hard-code the path in those files.\"), mdx(\"p\", null, \"Use grep to filter files that may cause issues.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"root:~/devdocs/lib $ grep -rnw \\\".\\\" -e \\\"assets\\\"\\n\")), mdx(\"h3\", null, \"Systemctl and debug\"), mdx(\"p\", null, \"Here we could run ruby application as a Linux service.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# reload systemd configuration files and unit files\\nsystemctl daemon-reload\\n# start devdocs\\nsystemctl enable devdocs\\nsystemctl start devdocs\\n# debug\\nsystemctl status devdocs\\n# or\\njournalctl -u devdocs\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"date":"2020-03-05","title":"Deploy DevDocs running locally on Linux as service","category":"configs","tags":["Linux","Linux service","rapsberry pi"],"slug":"39718281141d7b0416200fc63d121fb5"},"timeToRead":1,"tableOfContents":{"items":[{"url":"#another-option-for-windowsmacos","title":"Another option for Windows/macOS"},{"url":"#install-dependencies","title":"Install dependencies","items":[{"url":"#ruby","title":"ruby"},{"url":"#curl","title":"curl"},{"url":"#nodejs","title":"Nodejs"}]},{"url":"#running-as-a-linux-service","title":"Running as a Linux service","items":[{"url":"#follow-official-quick-start","title":"follow official quick start"},{"url":"#create-new-linux-service-with-systemd","title":"Create new linux service with systemd"},{"url":"#fix-some-path-error-in-files","title":"Fix some path error in files"},{"url":"#systemctl-and-debug","title":"Systemctl and debug"}]}]}}},"pageContext":{"id":"25aa7610-5489-592f-bdf5-4a964f042183","previous":{"post":{"id":"3e2c728f-20aa-5095-8e86-bb7192e28759","parent":{"id":"977f71f1-13f0-52eb-8110-984b3111a4b5"},"excerpt":"理查德·朱维尔的哀歌  - 好人如何自证清白 一个拯救生命的英雄却在短暂时间内成为头号嫌疑犯，这让人不得不好奇舆论转变如此之快的原因。在电影中，女记者Kathy Scruggs通过出卖色相从联邦调查局探员Tom Shaw那获取内幕消息，得知爆炸案的英雄人物Richard…","slug":"3a4d3d1de6dc80c781e3814430557f26","title":"理查德·朱维尔的哀歌","tags":["review"],"category":"thoughts","date":"2020-03-01"}},"next":{"post":{"id":"9121fcdd-31eb-54c8-aea9-f00aef6aa50a","parent":{"id":"e0ba59b8-b6e4-53cd-9405-cc5a8ea726b9"},"excerpt":"About this post After creating my own nginx and apache configuration files for deploying local websites on raspberry pi, the learning curve…","slug":"67e2e987b266cdbb2c49ba795824d5c9","title":"Setup Nginx reverse proxy for apache2 on Raspberry pi","tags":["nginx","raspberrypi"],"category":"configs","date":"2020-03-07"}}}}}