{"componentChunkName":"component---src-templates-post-jsx","path":"/post/1253631b77633c87d9a469c1d01de120","result":{"data":{"post":{"id":"7414fcc4-f85d-5024-b0c5-57c577aba56a","excerpt":"Problem I'm using  React-router-dom  for frontend routing which works well when visiting root paths like  localhost:port/root  but fails…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"webpack inject absolute paths for routing issues\",\n  \"date\": \"2020-04-24\",\n  \"category\": \"web dev\",\n  \"tags\": [\"webpack\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Problem\"), mdx(\"p\", null, \"I'm using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React-router-dom\"), \" for frontend routing which works well when visiting root paths like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:port/root\"), \" but fails when trying to visit non-root paths like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:port/root/sub\"), \". As a result, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack dev server\"), \" would send a 404 status error.\"), mdx(\"h3\", null, \"Solution\"), mdx(\"p\", null, \"Opening the console in browser's dev tool, I found that there was one more error that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:port/root/sub/bundle.js\"), \" couldn't be loaded as it was an invalid MIME type. However, in fact the output bundle file is under output directory's root.  The correct path for script' src should be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/bundle.js\"), \" instead of a relative path \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bundle.js\"), \" that made the browser trying to request the non-existed file from the server.\"), mdx(\"p\", null, \"This problem in my situation was due to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack\"), \" missing correct configuration on how to output the bundle files.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// in webpack.config.js\\n...\\noutput:{\\n  // set publicPath to '/' so that html-webpack-plugin could inject bundle file using absoulte path\\n  // more details on https://webpack.js.org/configuration/output/#outputpublicpath\\n  publicPath:'/'.\\n  ...\\n}\\n...\\ndevServer:{\\n  ...\\n  // use html5 history API in react-router-dom\\n  historyApiFallback: true,\\n  ...\\n}\\n\")), mdx(\"h3\", null, \"Reference\"), mdx(\"p\", null, \"Answers from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually\"\n  }), \"react-router-urls-dont-work-when-refreshing-or-writing-manually\"), \" helpful with this problem especially the accepted give a great explaination.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"date":"2020-04-24","title":"webpack inject absolute paths for routing issues","category":"web dev","tags":["webpack"],"slug":"1253631b77633c87d9a469c1d01de120"},"timeToRead":1,"tableOfContents":{"items":[{"url":"#problem","title":"Problem","items":[{"url":"#solution","title":"Solution"},{"url":"#reference","title":"Reference"}]}]}}},"pageContext":{"id":"7414fcc4-f85d-5024-b0c5-57c577aba56a","previous":{"post":{"id":"f15a745a-62b6-5606-937e-b472495a7ea7","parent":{"id":"69949235-3331-5584-8173-14196726967b"},"excerpt":"bypy的一个bug 最近云盘抽风了，一直使用的bypy上传报错。根据repo的 #issue 522 的解决方法可以奏效，但是看起来错误不在于代码，而是 百度开放平台pcs…","slug":"b9c660e878713c6835ff55646dc3ec52","title":"bypy修复Bug","tags":["project"],"category":"fun stuff","date":"2020-04-01"}},"next":{"post":{"id":"88bf69c9-b0c5-54fa-ac4e-86c2d4bf8466","parent":{"id":"b97b521d-c7d0-515b-b3d1-c15c10c4a7ff"},"excerpt":"…","slug":"323d6868c23205c105c13309b24e6e36","title":"生活之后还是生活","tags":["idea"],"category":"thoughts","date":"2020-05-10"}}}}}