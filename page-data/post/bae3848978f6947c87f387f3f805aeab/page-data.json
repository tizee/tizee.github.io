{"componentChunkName":"component---src-templates-post-jsx","path":"/post/bae3848978f6947c87f387f3f805aeab","result":{"data":{"post":{"id":"e3b71dbf-9003-56ad-b6ea-d570de8cbc70","excerpt":"To be honest, I have been using another repo to deploy static files from gatsby build. The process is tedious that each time I have to…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"accelerate blog deployment\",\n  \"date\": \"2019-12-19\",\n  \"category\": \"blog\",\n  \"tags\": [\"automation\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To be honest, I have been using another repo to deploy static files from gatsby build. The process is tedious that each time I have to update the blog manually (open the terminal and enter some git commands to push the latest update to the remote repo).\"), mdx(\"p\", null, \"At the beginning, I didn't consider it as an issue because I focused on development at that time. However, the more times I publish my blog, the more inconvenient I feel from this.\"), mdx(\"p\", null, \"For the sake of simplicity, I want to write some scripts to accelerate the deployment.\"), mdx(\"h2\", null, \"Bash Script\"), mdx(\"p\", null, \"This is the easiest way to achieve my requirement with both the simplicity and efficiency.\"), mdx(\"p\", null, \"Just like another script I wrote for the X86 instruction book deployed with TravisCI, the script is composed of three steps.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Set up constants\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Execute commands\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Remove temporary files or directories\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"#!/bin/bash\\n# simple deployment script\\nREPO=\\\"git@github.com:tizee/tizee.github.io.git\\\"\\nCUR=`pwd`\\n\\n# 1. creat a temporary directory\\nmkdir -v -p ./_BlogBuild/temp_repo\\ncp -v public/* ./_BlogBuild/temp_repo/\\n\\n# 2. create a new git repo\\ncd ./_BlogBuild/temp_repo && git init\\n\\n# 3. push --force to remote repo origin master branch\\ngit add -A && git commit -m \\\"auto deploy\\\" git push --force -u $REPO master\\n\\n# 4. remove directory\\ncd $CUR && rm -r -f ../_BlogBuild/temp_repo\\n\\n# 5. done!!\\n\\n\")), mdx(\"h2\", null, \"Cross-platform solution: Nodejs script\"), mdx(\"p\", null, \"However, right now the OS I'm using is Windows 10 which is tedious to run above bash script through WSL. Hence, I decide to write a JavaScript version of it, which use Node.js built-in libraries that could enable cross-platform feature.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const fs = require('fs');\\nconst cp = require('child_process');\\nconst path = require('path');\\n\\nconst CUR = process.cwd();\\nconst TEMP_DIR = path.join(CUR, 'temp');\\nconst SRC = path.join(CUR, 'public');\\nconst REPO = 'git@github.com:tizee/tizee.github.io.git';\\nconsole.log(`CUR: ${CUR}`);\\nconsole.log(`TEMP_DIR: ${TEMP_DIR}`);\\nconsole.log(`SRC: ${SRC}`);\\nconsole.log(`REPO: ${REPO}`);\\n\\n// copying files recursively\\nconst copyFileRecursive = (src, dest) => {\\n  const isExist = fs.existsSync(src);\\n  if (!isExist) {\\n    return;\\n  }\\n  const isDirectory = fs.lstatSync(src).isDirectory();\\n  if (isDirectory) {\\n    fs.mkdirSync(dest);\\n    fs.readdirSync(src).forEach((file) => {\\n      let curSrc = path.join(src, file);\\n      if (fs.lstatSync(curSrc).isDirectory()) {\\n        copyFileRecursive(curSrc, path.join(dest, file));\\n      } else {\\n        fs.copyFileSync(curSrc, path.join(dest, file), fs.constants.COPYFILE_EXCL);\\n      }\\n    });\\n  } else {\\n    fs.copyFileSync(src, dest, fs.constants.COPYFILE_EXCL);\\n  }\\n};\\n\\ncopyFileRecursive(SRC, TEMP_DIR);\\nconsole.log('\\u266A copy files done!');\\n\\n// git init && git add all\\nconst shell = cp.execSync;\\nconst options = { cwd: TEMP_DIR };\\nconst gitShell = (command) => {\\n  shell(command, options);\\n};\\ngitShell(`git init`);\\nconsole.log('\\u266A git init done!');\\ngitShell(`git add -A`);\\nconsole.log('\\u266A git add done!');\\ngitShell(`git commit -m \\\"updated by auto deployment script\\\"`);\\nconsole.log('\\u266A git commit done!');\\ngitShell(`git push -f -u ${REPO} master`);\\nconsole.log('\\u266A git push done!');\\n\\n// remove temporary directory\\nshell(`rm -r -f ${TEMP_DIR}`);\\n// done!\\nconsole.log(`\\u266A remove ${TEMP_DIR} done!`);\\n\")), mdx(\"h3\", null, \"References\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/13786160/copy-folder-recursively-in-node-js/26038979\"\n  }), \"Copy files recursively in node.js\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/18052762/remove-directory-which-is-not-empty\"\n  }), \"Remove non-empty directory in node.js\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"date":"2019-12-19","title":"accelerate blog deployment","category":"blog","tags":["automation"],"slug":"bae3848978f6947c87f387f3f805aeab"},"timeToRead":1,"tableOfContents":{"items":[{"url":"#bash-script","title":"Bash Script"},{"url":"#cross-platform-solution-nodejs-script","title":"Cross-platform solution: Nodejs script","items":[{"url":"#references","title":"References"}]}]}}},"pageContext":{"id":"e3b71dbf-9003-56ad-b6ea-d570de8cbc70","previous":{"post":{"id":"7cccef61-2696-5b28-ba0d-de548dc16b7f","parent":{"id":"fbdaf32e-7571-5257-b5e0-65f679d6dc99"},"excerpt":"Recently I read Talia Marcassa’s post  Styled Components: To Use or Not to use ?  and I was thinking rewrite my all UI components using…","slug":"27c131f188dc849896e1da215a07c343","title":"Rewrite blog UI with CSS in JS","tags":["blog","react"],"category":"blog","date":"2019-12-08"}},"next":{"post":{"id":"96869a1c-0bc4-5016-bebb-022b6cc6f92a","parent":{"id":"fe22c7da-d13b-5985-981b-43f34f654450"},"excerpt":"update: \"2020-01-15\" BTW, This is the famous Floyd cycle detection algorithm. Problem To detect whether there is a loop in linked list, we…","slug":"f12c03d5be181286a4a5f38bdcd94f0c","title":"linked list cycle detection","tags":["math"],"category":"algorithm","date":"2019-12-21"}}}}}