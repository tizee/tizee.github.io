{"componentChunkName":"component---src-templates-post-jsx","path":"/post/1ae9ccfa4b275ed5bb32e9bd412e4b0a","result":{"data":{"post":{"id":"e6eff064-61bd-5a4b-95b7-6c31ede8098e","excerpt":"There are several ways to cross origin using vanilla JavaScript. If you are familiar with front-end cross origin techniques, you could skip…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"It is time to cross origin\",\n  \"date\": \"2019-10-10\",\n  \"category\": \"web dev\",\n  \"tags\": [\"api\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"There are several ways to cross origin using vanilla JavaScript. If you are familiar with front-end cross origin techniques, you could skip this post.\"), mdx(\"h3\", null, \"What is an origin\"), mdx(\"p\", null, \"If you are familiar with computer networking, you could skip this paragraph.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const url = \\\"https://api.foobar.com/data/users/foo/\\\";\\nconst protocol = \\\"https\\\";\\nconst subDomain = \\\"api\\\";\\nconst domain = \\\"foobra\\\";\\nconst topLevelDomain = \\\"com\\\";\\nconst URI = \\\"/data/users/foo\\\";\\n\")), mdx(\"p\", null, \"For example, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://api.foobar.com\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://www.foobar.com\"), \" are two different subdomain under the same domain \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://*.foobar.com\"), \".\"), mdx(\"h3\", null, \"CORS\"), mdx(\"p\", null, \"At most time, the pages users access are under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://www.foobar.com\"), \". The XMLHttpRequest could only access the resources under the same domain by default.\"), mdx(\"p\", null, \"The Cross-Origin Resource Sharing defines how browser communicates with the server when it has to request resource on another domain. The browser has to add an additional http header parameter \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Origin\"), \". And the server would return response message with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Access-Control-Allow-Origin\"), \" header.\"), mdx(\"h4\", null, \"XMLHttpRequest\"), mdx(\"p\", null, \"The modern web browsers (except IE8) all support CORS by default. To use CORS, you just need to pass the absolute URLs in the XMLHttpRequest objects.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"XMLHttpRequest can only be used to request URL with the same protocol that under the same domain(Or use absolute URLs to enable CORS)\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"let xhr = new XMLHttpRequest();\\nxhr.onreadyStatechange = function(){\\n  if(xhr.readyState=== 4){\\n    if((xhr.status>=200 && xhr.status<300) || xhr.status=== 304){\\n      console.log(xhr.responseText);\\n    }else{\\n      console.log(xhr.status);\\n    }\\n  }\\n};\\nxhr.open(\\\"get\\\",\\\"https://api.foobar.com/users/foo\\\",true);\\nxhr.send(null);\\n\")), mdx(\"h4\", null, \"Img Ping\"), mdx(\"p\", null, \"This is a one-way cross-origin communication method.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"let img = new Image();\\nimg.onload = img.onerror = function(){\\n  // callback when finished\\n  console.log(\\\"done\\\");\\n}\\nimg.src= \\\"https://api.foorbar.com/users/foor\\\";\\n\")), mdx(\"p\", null, \"We could set the same handler for event onload and onerror so once the request is completed we could run some code.\"), mdx(\"p\", null, \"The drawback is obvious that it only supports Http get method and we couldn't access the response text.\"), mdx(\"h4\", null, \"JSONP\"), mdx(\"p\", null, \"JSON with padding wraps JSON data in a callback function. The JSONP consists of JSON and a callback function.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function handleCallback(response){\\n  console.log(response);\\n}\\n\\nlet script = document.createElement(\\\"script\\\");\\nscript.src= \\\"https://api.foobar.com/user/foo?callback=handleCallback\\\";\\ndocument.body.insertBefore(script,document.body.firstChild);\\n\")), mdx(\"p\", null, \"Using JSONP, we could access the response text. It also supports two-way communication between the browser and the server.\"), mdx(\"p\", null, \"However, when using JSONP, we should make sure the callback function code and the response from other domain is secure.\"), mdx(\"p\", null, \"Another shortcoming is that it's hard to determine whether a request is failed or not.\"), mdx(\"h4\", null, \"Comet\"), mdx(\"p\", null, \"Comet is a server-side technique that pushing data to the browser from the server for frequently updated data like living sports matches' scores.\"), mdx(\"h5\", null, \"Sever-sent Events(SSE)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"let source =new EventSource(\\\"https://api.foorbar.com/users\\\");\\nsource.onmessage = function(e){\\n  let data = e.data;\\n  // handle data\\n}\\nsource.close();\\n\")), mdx(\"h4\", null, \"Web Sockets\"), mdx(\"p\", null, \"To use web sockets in front-end, you need to make sure your server support it. The protocol that web socket uses starts with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ws://\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wss://\"), \" as corresponding to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://\"), \".\"), mdx(\"p\", null, \"It enables full duplex between the browser and the server and the data packet is rather small compared with Http's.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// must pass absoulte URLs\\nlet socket = new WebSocket('ws://www.foobar.com/users');\\nsocket.onmessage = function(e){\\n  let data = e.data;\\n  // handle data\\n}\\nsocket.send(\\\"hello\\\");\\nlet data = {\\n  name: 'foobar'\\n};\\nsocket.send(JSON.stringify(data));\\nsocket.close();\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"date":"2019-10-10","title":"It is time to cross origin","category":"web dev","tags":["api"],"slug":"1ae9ccfa4b275ed5bb32e9bd412e4b0a"},"timeToRead":1,"tableOfContents":{"items":[{"url":"#what-is-an-origin","title":"What is an origin"},{"url":"#cors","title":"CORS","items":[{"url":"#xmlhttprequest","title":"XMLHttpRequest"},{"url":"#img-ping","title":"Img Ping"},{"url":"#jsonp","title":"JSONP"},{"url":"#comet","title":"Comet"},{"url":"#web-sockets","title":"Web Sockets"}]}]}}},"pageContext":{"id":"e6eff064-61bd-5a4b-95b7-6c31ede8098e","previous":{"post":{"id":"6bf50e4c-a8a4-5af6-af7d-fc0201d193cb","parent":{"id":"68eb9d39-49f9-54db-918f-e9740aa50675"},"excerpt":"If you have learnt computer networking course in the school, you would be familiar with the fact that the Http is an application layer…","slug":"1af315af5bdbb860168f4640adb1e71d","title":"From http1 to http3","tags":["http"],"category":"web dev","date":"2019-10-09"}},"next":{"post":{"id":"ec727e9c-77a0-5941-928c-5f789706f420","parent":{"id":"a37b174e-0532-5424-9ae8-178e3007e467"},"excerpt":"Nowadays almost all websites that have Https URLs enabled are secured with a certificate so users could access these trusted websites in a…","slug":"49ecd90c40aeb67db5f454df15193a09","title":"Http to Https","tags":["https","information security"],"category":"web dev","date":"2019-10-10"}}}}}