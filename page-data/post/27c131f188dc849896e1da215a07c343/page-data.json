{"componentChunkName":"component---src-templates-post-jsx","path":"/post/27c131f188dc849896e1da215a07c343","result":{"data":{"post":{"id":"fbdaf32e-7571-5257-b5e0-65f679d6dc99","excerpt":"Recently I read Talia Marcassa’s post  Styled Components: To Use or Not to use ?  and I was thinking rewrite my all UI components using…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Rewrite blog UI with CSS in JS\",\n  \"date\": \"2019-12-08\",\n  \"category\": \"blog\",\n  \"tags\": [\"blog\", \"react\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Recently I read Talia Marcassa\\u2019s post \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/building-crowdriff/styled-components-to-use-or-not-to-use-a6bb4a7ffc21\"\n  }), \"Styled Components: To Use or Not to use ?\"), \" and I was thinking rewrite my all UI components using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"styled-components\"), \" to make it more structural.\"), mdx(\"p\", null, \"Here are her top highlight words: Furthermore, when you have components that rely on JavaScript for their style, Styled Components gives control of those states back to CSS instead of using a multitude of conditional class names.\"), mdx(\"p\", null, \"That precisely describe what my old codebase looks like. I used OBEM as my css naming style so there are lots of class names with slashes in separated SCSS files.\"), mdx(\"p\", null, \"She pointed out there are four reasons why people like styled-components.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"It makes components less bulky\\nFor example, instead of using objects and React event handlers to setup a hover state, use styled-component enable us to use CSS to handle UI states.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The ThemeProvider\\nHer team used the ThemeProvider to build a configuration page which allows a user to customize certain stylistic elements like colors.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The CSS function\\nBTW, I also used styled-components\\u2019 css function in my blog\\u2019s UI components to conditionally render css, which like she said, we no longer had to render conditional class names based on props.\\nIn her opinion, this reduces clutter in components as well as maintains a separation of concerns between CSS and JavaScript.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Testing\\nHer team implemented the Jest Styled-Components library for testing in Jest. As she mentioned in her post, It makes testing styled components painless by creating consistent class names and allowing developers to assert specific CSS rules that might be important to the integrity of your app.\")), mdx(\"p\", null, \"She also said there are drawbacks about styled components.\"), mdx(\"p\", null, \"For example, there are certain style rules that her team found hard to apply to styled components e.g. rules that set the placement of an element on a page like margin or display properties.\"), mdx(\"p\", null, \"In conclusion, use styled components will reduce the complexity of your codebase.\"), mdx(\"p\", null, \"It's easy for me to rewrite my blog UI components with the help of styled-components function and JavaScript's template literals.\"), mdx(\"p\", null, \"However, there are a few problems I need to address in the header component. The scroll animation was controlled by its CSS class names, which is not recommended in styled-components. I separated the whole header component to several sub-components like menu components that include desktop version and mobile version, modal component which only functions when mobile menu is open and navbar hamburger component.\"), mdx(\"p\", null, \"This made my code more structural and I could update these sub-components independently in the future.\"), mdx(\"p\", null, \"I also consider adding more features like theme to my blog, which inspired by the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://alligator.io/\"\n  }), \"Alligator\"), \" and mouseover dropdown menu to the navbar menu, which is commonly used in modern website.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"date":"2019-12-08","title":"Rewrite blog UI with CSS in JS","category":"blog","tags":["blog","react"],"slug":"27c131f188dc849896e1da215a07c343"},"timeToRead":2,"tableOfContents":{}}},"pageContext":{"id":"fbdaf32e-7571-5257-b5e0-65f679d6dc99","previous":{"post":{"id":"f553b56f-4b65-5692-91e0-ffa73bfa24ff","parent":{"id":"ce12dc60-e61d-5205-9cd6-04c99803033f"},"excerpt":"From a Chinese perspective of view, this movie gave a great example of American's multicultural life. After finished watching this movie, I…","slug":"a25c71ded31f1760ee10c5b3ff0e389c","title":"Gran Torino","tags":["review"],"category":"movie","date":"2019-11-13"}},"next":{"post":{"id":"8f822966-3810-5796-bf6e-4888d5cecdac","parent":{"id":"e3b71dbf-9003-56ad-b6ea-d570de8cbc70"},"excerpt":"To be honest, I have been using another repo to deploy static files from gatsby build. The process is tedious that each time I have to…","slug":"bae3848978f6947c87f387f3f805aeab","title":"accelerate blog deployment","tags":["automation"],"category":"blog","date":"2019-12-19"}}}}}