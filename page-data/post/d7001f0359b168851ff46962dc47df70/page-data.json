{"componentChunkName":"component---src-templates-post-jsx","path":"/post/d7001f0359b168851ff46962dc47df70","result":{"data":{"post":{"id":"5b81766f-661d-5918-a736-c7cb91e6c8f5","excerpt":"update: \"2020-2-28\"\ncomment: migrate to gatsby-remark-embedder Why? Because user experience matters. When I developed the Table-of-content…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Debounce and Throttle and requestAnimationFrame\",\n  \"date\": \"2019-10-02\",\n  \"category\": \"web dev\",\n  \"tags\": [\"css\", \"web optimization\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"update: \\\"2020-2-28\\\"\\ncomment: migrate to gatsby-remark-embedder\"), mdx(\"h2\", null, \"Why? Because user experience matters.\"), mdx(\"p\", null, \"When I developed the Table-of-content component, the scroll event bound with handler like what I did before for the navbar component. However, the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/32395988/highlight-menu-item-when-scrolling-down-to-section\"\n  }), \"answer\"), \" on stack Overflow talked about the correct way to handle the expensive DOM events like \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"scroll\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"resize\"), \" because those events could be triggered many times in short time especially on a mobile device.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The most definitive way to prevent high-rated events (scroll, resize...) from making your site slow or unresponsive is to control how often the event handler is called.\")), mdx(\"p\", null, \"And the answer also refers to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://css-tricks.com/debouncing-throttling-explained-examples/\"\n  }), \"David Corbacho's detailed explanation\"), \".\"), mdx(\"p\", null, \"David in his post recommended to use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://lodash.com/docs/4.17.15#debounce\"\n  }), \"debounce\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://lodash.com/docs/4.17.15#throttle\"\n  }), \"throttle\"), \" or DOM's native API requestAnimationFrame to control these high-rated events. What makes his post so great is that he uses many codepen embedded code to illustrate those techniques.\"), mdx(\"p\", null, \"These techniques work as a control layer between the event and event handler so they make handler decoupled from the event. We could use these to improve website's performance. But we do not use these techniques to control how often these event are triggered.\"), mdx(\"p\", null, \"For instance, you could see how often the scroll are invoked:\"), mdx(\"p\", null, mdx(\"iframe\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://codepen.io/dcorb/embed/preview/PZOZgB\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"300px\"\n    }\n  }))), mdx(\"h2\", null, \"Differences between them\"), mdx(\"p\", null, \"In short:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Debounce: invoke the event handler after waiting for a period of time until the last time debounced function(event handler) was invoked. Grouping a sudden burst of events (like keystrokes) into a single one.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Throttle: guarantee a constant flow of executions every X milliseconds. Like checking every 200ms your scroll position to trigger a CSS animation.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"requestAnimationFrame(rAF): a throttle alternative. When your function recalculates and renders elements on screen and you want to guarantee smooth changes or animations. (browser's native API)\"))), mdx(\"h2\", null, \"Examples\"), mdx(\"p\", null, \"Infinite scrolling throttled:\"), mdx(\"p\", null, mdx(\"iframe\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://codepen.io/qtizee/embed/preview/bGbXLeo\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"300px\"\n    }\n  }))), mdx(\"p\", null, \"keypress on autocomplete form with Ajax request\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codepen.io/qtizee/pen/mdbNXWO\"\n  }), \"https://codepen.io/qtizee/pen/mdbNXWO\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codepen.io/qtizee/pen/mdbNXWO\"\n  }), \"https://codepen.io/qtizee/pen/mdbNXWO\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codepen.io/qtizee/pen/mdbNXWO\"\n  }), \"https://codepen.io/qtizee/pen/mdbNXWO\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codepen.io/qtizee/pen/mdbNXWO\"\n  }), \"https://codepen.io/qtizee/pen/mdbNXWO\")), mdx(\"p\", null, \"Resize Example with debounce\"), mdx(\"p\", null, mdx(\"iframe\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://codepen.io/dcorb/embed/preview/XXPjpd\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"300px\"\n    }\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"date":"2019-10-02","title":"Debounce and Throttle and requestAnimationFrame","category":"web dev","tags":["css","web optimization"],"slug":"d7001f0359b168851ff46962dc47df70"},"timeToRead":1,"tableOfContents":{"items":[{"url":"#why-because-user-experience-matters","title":"Why? Because user experience matters."},{"url":"#differences-between-them","title":"Differences between them"},{"url":"#examples","title":"Examples"}]}}},"pageContext":{"id":"5b81766f-661d-5918-a736-c7cb91e6c8f5","previous":{"post":{"id":"ab257251-0184-5a4c-be79-05d9a6736866","parent":{"id":"04948b92-499d-5850-b5cd-c5f9ce0aa28b"},"excerpt":"A little history The most obvious difference between html4 and html5 is showed by these tags. The  html5  was first released on 28 October…","slug":"df417adcbaddc657d0264eeb6b5b6c74","title":"Html to Html5","tags":["html"],"category":"web dev","date":"2019-10-01"}},"next":{"post":{"id":"c21dc79e-eb0b-54b4-b49e-1b68f6fd6fb8","parent":{"id":"2805f64f-421b-5b21-8d02-925d061570f2"},"excerpt":"I couldn't find some of the corresponding names for those layouts in English so I decided to write the whole post in Chinese. P.S 这也我个人blog…","slug":"98cc064e00bfd07a25f230be7d5ac062","title":"Common layouts(中文)","tags":["css","Chinese"],"category":"web dev","date":"2019-10-02"}}}}}