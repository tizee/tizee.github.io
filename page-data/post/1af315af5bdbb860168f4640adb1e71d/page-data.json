{"componentChunkName":"component---src-templates-post-jsx","path":"/post/1af315af5bdbb860168f4640adb1e71d","result":{"data":{"post":{"id":"68eb9d39-49f9-54db-918f-e9740aa50675","excerpt":"If you have learnt computer networking course in the school, you would be familiar with the fact that the Http is an application layerâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"From http1 to http3\",\n  \"date\": \"2019-10-09\",\n  \"category\": \"web dev\",\n  \"tags\": [\"http\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you have learnt computer networking course in the school, you would be familiar with the fact that the Http is an application layer protocol, which is defined in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.rfc-editor.org/rfc/rfc7230.html\"\n  }), \"RFC 7230\"), \".\"), mdx(\"p\", null, \"The Http often presumes an underlying and reliable transport layer protocol such as TCP(Transmission Control Protocol) which is commonly used for Http.\"), mdx(\"p\", null, \"Http could also be adapted to use unreliable protocols like UDP(User Datagram Protocol).\"), mdx(\"p\", null, \"Http works like a request-response protocol in client-server model. The client could be a web browser which also serves as a user agent that accesses, consumes or display web content. The client submits an Http request to the server. The server provides the resources that the client may request and the server return a response message.\"), mdx(\"h3\", null, \"Http/1.0, Http/1.1\"), mdx(\"p\", null, \"Http is a shorthand for Hypertext Transfer Protocol. It's an application layer protocol for WWW(Word Wide Web).\"), mdx(\"h4\", null, \"Stateless\"), mdx(\"p\", null, \"Http is stateless. The server does not memorize the total times that the same client requests so it enables the server to support the large-scale concurrent requests. It also bring some risks like DDoS.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A stateless protocol does not require the Http server to retain information or status about each user for duration of multiple requests.\")), mdx(\"p\", null, \"However, some web applications implement states or server side sessions using Http Cookies or tokens generated from the web forms.\"), mdx(\"h4\", null, \"Persistent connection: Http/1.0 to Http/1.1\"), mdx(\"p\", null, \"In Http/1.0, the client needs to establish TCP connection with the server by handshake (sending the Http request message when getting the first response message in handshake process). Then the server sending back the requested document to client with Http response message. However, the connection is not persistent so it takes the twice RTT time each time the client requesting a document from the server.\"), mdx(\"p\", null, \"In Http/1.1, the protocol uses persistent connection that enables the client to reuse the same connection to request different documents once these files are stored on the same server.\"), mdx(\"p\", null, \"The Http/1.1 supports persistent connection with pipelining or without pipelining.\"), mdx(\"p\", null, \"When Http/1.1 works without pipelining, the client must send the next request after receiving the response message. You could infer that it takes 1 RTT to access a document in the same server once TCP connection has been established.\"), mdx(\"p\", null, \"The drawback is that the server has to wait for next request after sending the response.\"), mdx(\"p\", null, \"On the contrary, when using Http pipelining technique the client could send multiple Http requests over a TCP connection without waiting for the corresponding responses. In this way, the client could access to all documents on the same server within 1 RTT. To be more precise, \", mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"katex\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"katex-mathml\"\n  }), mdx(\"math\", _extends({\n    parentName: \"span\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n  }), mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"t\"), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"=\"), mdx(\"msub\", {\n    parentName: \"mrow\"\n  }, mdx(\"mi\", {\n    parentName: \"msub\"\n  }, \"T\"), mdx(\"mrow\", {\n    parentName: \"msub\"\n  }, mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"a\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"l\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"l\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"f\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"i\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"l\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"e\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"s\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"d\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"o\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"w\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"n\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"l\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"o\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"a\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"d\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"t\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"i\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"m\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"e\"))), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"+\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"R\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"T\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"T\")), mdx(\"annotation\", _extends({\n    parentName: \"semantics\"\n  }, {\n    \"encoding\": \"application/x-tex\"\n  }), \"t=T_{all files download time} + RTT\")))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.61508em\",\n      \"verticalAlign\": \"0em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2777777777777778em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mrel\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2777777777777778em\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.969438em\",\n      \"verticalAlign\": \"-0.286108em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\",\n    \"style\": {\n      \"marginRight\": \"0.13889em\"\n    }\n  }), \"T\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"msupsub\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-t vlist-t2\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-r\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.3361079999999999em\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"style\": {\n      \"top\": \"-2.5500000000000003em\",\n      \"marginLeft\": \"-0.13889em\",\n      \"marginRight\": \"0.05em\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"pstrut\",\n    \"style\": {\n      \"height\": \"2.7em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"sizing reset-size6 size3 mtight\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mtight\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\",\n    \"style\": {\n      \"marginRight\": \"0.01968em\"\n    }\n  }), \"l\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\",\n    \"style\": {\n      \"marginRight\": \"0.01968em\"\n    }\n  }), \"l\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\",\n    \"style\": {\n      \"marginRight\": \"0.10764em\"\n    }\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"i\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\",\n    \"style\": {\n      \"marginRight\": \"0.01968em\"\n    }\n  }), \"l\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"e\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"s\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"d\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"o\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\",\n    \"style\": {\n      \"marginRight\": \"0.02691em\"\n    }\n  }), \"w\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\",\n    \"style\": {\n      \"marginRight\": \"0.01968em\"\n    }\n  }), \"l\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"o\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"a\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"d\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"i\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"m\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"e\"))))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-s\"\n  }), \"\\u200B\")), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-r\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.286108em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222222222222222em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mbin\"\n  }), \"+\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222222222222222em\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.68333em\",\n      \"verticalAlign\": \"0em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\",\n    \"style\": {\n      \"marginRight\": \"0.00773em\"\n    }\n  }), \"R\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\",\n    \"style\": {\n      \"marginRight\": \"0.13889em\"\n    }\n  }), \"T\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\",\n    \"style\": {\n      \"marginRight\": \"0.13889em\"\n    }\n  }), \"T\")))), \".\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"HTTP/1.1 is a revision of the original HTTP (HTTP/1.0). In HTTP/1.0 a separate connection to the same server is made for every resource request. HTTP/1.1 can reuse a connection multiple times to download images, scripts, stylesheets, etc after the page has been delivered. HTTP/1.1 communications therefore experience less latency as the establishment of TCP connections presents considerable overhead.\")), mdx(\"h4\", null, \"Head-of-line blocking\"), mdx(\"p\", null, \"Even using Http pipelining, the head-of-line blocking cannot be avoided. For example, when the number of allowed parallel requests in the browser(client) is used up, the subsequent request must have to wait for the former requests to complete.\"), mdx(\"h3\", null, \"Http/2.0\"), mdx(\"p\", null, \"Http/2.0 was published as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://tools.ietf.org/html/rfc7540\"\n  }), \"RFC 7540\"), \" in May 2015. It leaves most of Http/1.1's high-level syntax(request message syntax and response message syntax) the same.\"), mdx(\"h4\", null, \"Differences: Http/2.0 and Http/1.1\"), mdx(\"p\", null, \"The main difference between Http/2.0 and Http/1.1 is how data is framed and transported between the client and the server.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"HTTP/2 allows the server to \\\"push\\\" content, that is, to respond with data for more queries than the client requested. This allows the server to supply data it knows a web browser will need to render a web page, without waiting for the browser to examine the first response, and without the overhead of an additional request cycle\")), mdx(\"p\", null, \"An additional change between Http/2.0 and Http/1.1 is that Http/2.0 uses multiplexing to address the HOL blocking issue but the HOL blocking could still occur at transport layer when using a single TCP connection. For instance, it could occur when the TCP packets are lost or delayed in transmission. And Http/2.0 no longer support Http/1.1's chunked transfer encoding mechanism.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Although the design of HTTP/2 effectively addresses the HTTP-transaction-level head-of-line blocking problem by allowing multiple concurrent HTTP transactions, all those transactions are multiplexed over a single TCP connection, meaning that any packet-level head-of-line blocking of the TCP stream simultaneously blocks all transactions being accessed via that connection. This head-of-line blocking in HTTP/2 is now widely regarded as a design flaw, and much of the effort behind QUIC and HTTP/3 has been devoted to reduce head-of-line blocking issues\")), mdx(\"p\", null, \"The HOL blocking problem is considered as a design flaw of Http/2.0 so take it easy when you use Http/2.0.\"), mdx(\"h4\", null, \"Differences: Http/2.0 and SPDY\"), mdx(\"p\", null, \"The SPDY was first developed by the Google that aimed to reduce latency.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"From Http/1.1 to SPDY: true request pipelining without FIFO restrictions, message framing mechanism to simplify client and server development, mandatory compression (including headers), priority scheduling, and even bi-directional communication\")), mdx(\"p\", null, \"SPDY gives each action an \\\"Stream ID\\\", meaning there is a single TCP connection channel between the user and the server.\"), mdx(\"p\", null, \"Http/2.0 uses fixed Huffman code-based header compression algorithm instead of SPDY's dynamic stream-based compression.\"), mdx(\"h4\", null, \"Encryption\"), mdx(\"p\", null, \"Although Http/2.0 supports both Http URIs and Https URIs, all major clients(web browsers) only implement and support Http/2.0 over TLS (Https).\"), mdx(\"h3\", null, \"Http/3.0\"), mdx(\"p\", null, \"It was introduced on September 26, 2019. The Http/3.0 was based on a RFC draft \\\"Hypertext Transfer Protocol (HTTP) over QUIC\\\". It's easy to infer that Http/3.0 focuses on QUIC, a transport layer protocol initially developed by Google.\"), mdx(\"p\", null, \"The fact is that at beginning the name was Http-over-QUIC. I think it is time to learn QUIC protocol.\"), mdx(\"h3\", null, \"Reference\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\"\n  }), \"Http\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/HTTP/2\"\n  }), \"Http 2.0\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/HTTP_pipelining\"\n  }), \"Http pipelining\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Head-of-line_blocking\"\n  }), \"Head-of-line blocking\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"date":"2019-10-09","title":"From http1 to http3","category":"web dev","tags":["http"],"slug":"1af315af5bdbb860168f4640adb1e71d"},"timeToRead":4,"tableOfContents":{"items":[{"url":"#http10-http11","title":"Http/1.0, Http/1.1","items":[{"url":"#stateless","title":"Stateless"},{"url":"#persistent-connection-http10-to-http11","title":"Persistent connection: Http/1.0 to Http/1.1"},{"url":"#head-of-line-blocking","title":"Head-of-line blocking"}]},{"url":"#http20","title":"Http/2.0","items":[{"url":"#differences-http20-and-http11","title":"Differences: Http/2.0 and Http/1.1"},{"url":"#differences-http20-and-spdy","title":"Differences: Http/2.0 and SPDY"},{"url":"#encryption","title":"Encryption"}]},{"url":"#http30","title":"Http/3.0"},{"url":"#reference","title":"Reference"}]}}},"pageContext":{"id":"68eb9d39-49f9-54db-918f-e9740aa50675","previous":{"post":{"id":"403e84c9-e029-5d37-8639-b83ad26a5299","parent":{"id":"19d02318-14aa-566c-bf3c-e824e3666be7"},"excerpt":"DOM stands for Document Object Model and BOM stands for Browser Object Model. DOM Level 1 DOM level 1 specification is separated intoâ€¦","slug":"61767c73f68a78612f055915da7f6768","title":"DOM Levels","tags":["dom"],"category":"web dev","date":"2019-10-08"}},"next":{"post":{"id":"aa2459ca-ae44-5bd3-939f-9e2454307ef0","parent":{"id":"e6eff064-61bd-5a4b-95b7-6c31ede8098e"},"excerpt":"There are several ways to cross origin using vanilla JavaScript. If you are familiar with front-end cross origin techniques, you could skipâ€¦","slug":"1ae9ccfa4b275ed5bb32e9bd412e4b0a","title":"It is time to cross origin","tags":["api"],"category":"web dev","date":"2019-10-10"}}}}}