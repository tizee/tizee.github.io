{"componentChunkName":"component---src-templates-post-jsx","path":"/post/fcef23292f506c7b17129f243977f158","result":{"data":{"post":{"id":"88eb9b8f-bc36-585b-910b-7e50cf62108a","excerpt":"Problem If you try to use git to clone a huge repository to figure out what's behind the scens, you will get a lot of files in the end…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Git clone subdirectory\",\n  \"date\": \"2020-06-23\",\n  \"category\": \"snippets\",\n  \"tags\": [\"git\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Problem\"), mdx(\"p\", null, \"If you try to use git to clone a huge repository to figure out what's behind the scens, you will get a lot of files in the end, which may lead you to the wrong way. To concertrate on the main functionality, we need to filter out the files that we are curioused about.\"), mdx(\"h3\", null, \"Use git sparse-checkout\"), mdx(\"p\", null, \"We could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git sparse-checkout\"), \" that introduced in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Git v2.25\"), \" to filter out the files we need in current repository. However, it still require to clone the whole repository first. \\uD83D\\uDC36 What's the difference between opening the subdirectory in a new IDE window and this \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git sparse-checkout\"), \" approach?\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# no checkout clone\\ngit clone --no-checkout repo-url\\ncd repo-name\\ngit sparse-checkout init --cone\\ngit sparse-checkout set sub-dir1 sub-dir2\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git clone --no-checkout git@github.com:gatsbyjs/gatsby.git\\ncd gatsby\\ngit sparse-checkout --cone\\ngit sparse-checkout set packages\\n\")), mdx(\"h3\", null, \"Use git checkout\"), mdx(\"p\", null, \"Another way is to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git init\"), \" to create an empty local repository. Then use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git remote add\"), \" to set its remote upstream. We could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git clone\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git checkout\"), \" to checkout subdirectories.\"), mdx(\"p\", null, \"Sounds familiar? It is equivalent to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git sparse-checkout\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git init\\ngit remote add remote-name git-url\\ngit fetch remote-name\\ngit checkout remote-name/branch -- path/to/subdir\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git init\\ngit remote add tensorflow https://github.com/tensorflow/tensorflow.git\\ngit fetch tensorflow\\ngit checkout tensorflow/master -- tools\\n\")), mdx(\"h3\", null, \"Use Browser-plugin\"), mdx(\"p\", null, \"For Chrome users, there is a plugin called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GitZip\"), \". It can make the sub-directories and files that you select on the web page as zip and download it.\"), mdx(\"p\", null, \"Here is the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://chrome.google.com/webstore/detail/gitzip-for-github/\"\n  }), \"link\"), \";\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"date":"2020-06-23","title":"Git clone subdirectory","category":"snippets","tags":["git"],"slug":"fcef23292f506c7b17129f243977f158"},"timeToRead":1,"tableOfContents":{"items":[{"url":"#problem","title":"Problem","items":[{"url":"#use-git-sparse-checkout","title":"Use git sparse-checkout"},{"url":"#use-git-checkout","title":"Use git checkout"},{"url":"#use-browser-plugin","title":"Use Browser-plugin"}]}]}}},"pageContext":{"id":"88eb9b8f-bc36-585b-910b-7e50cf62108a","previous":{"post":{"id":"da5ee7ed-6a9e-51e3-8fa5-721efdcaa15e","parent":{"id":"ee96bdb7-1dd2-5dd9-ba34-1ec9c8be9ca3"},"excerpt":"After staring at the desktop screen for a couple of minutes, I realized that the wallpaper was really tedious, though it was spectacular for…","slug":"e817fdce16a7db1d58a0cead4e180596","title":"Image Resolution Enhancer","tags":["AI","blackpink","docker"],"category":"fun stuff","date":"2020-06-12"}},"next":{"post":{"id":"d51e2810-f98d-59d3-9169-05b68a88b6c0","parent":{"id":"8ac29bb0-62c8-5cc9-b709-a60e05ed5e1e"},"excerpt":"Common options Check video metadata Transform video type Set Video fps We could adjust the video fps, decreasing the output file fps mostly…","slug":"923eaa63f00067b5246729d401311427","title":"ffmpeg basic usage","tags":["ffmpeg"],"category":"snippets","date":"2020-06-25"}}}}}