{"componentChunkName":"component---src-templates-post-jsx","path":"/post/a9bed2b3a3e779a8840404792c199920","result":{"data":{"post":{"id":"b059a107-da3b-5809-9610-46e18a30b374","excerpt":"前言 虽然说 VsCode 的代码模版用的是 json 格式，但是定义代码模版的语言用的是 EBNF  (extended Backus-Naur form)，一个上下文无关的文法（产生式左部全部为非终结符 Non-terminator…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"VsCode Snippet\",\n  \"date\": \"2020-07-24\",\n  \"category\": \"dev\",\n  \"tags\": [\"tool\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u524D\\u8A00\"), mdx(\"p\", null, \"\\u867D\\u7136\\u8BF4\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"VsCode\"), \"\\u7684\\u4EE3\\u7801\\u6A21\\u7248\\u7528\\u7684\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"json\"), \"\\u683C\\u5F0F\\uFF0C\\u4F46\\u662F\\u5B9A\\u4E49\\u4EE3\\u7801\\u6A21\\u7248\\u7684\\u8BED\\u8A00\\u7528\\u7684\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EBNF\"), \" (extended Backus-Naur form)\\uFF0C\\u4E00\\u4E2A\\u4E0A\\u4E0B\\u6587\\u65E0\\u5173\\u7684\\u6587\\u6CD5\\uFF08\\u4EA7\\u751F\\u5F0F\\u5DE6\\u90E8\\u5168\\u90E8\\u4E3A\\u975E\\u7EC8\\u7ED3\\u7B26\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Non-terminator\"), \"\\u3002\\u53EA\\u8981\\u770B\\u5F97\\u61C2\\u4E0B\\u9762\\u7684\\u6587\\u6CD5\\u4EA7\\u751F\\u5F0F\\uFF0C\\u5373\\u53EF\\u5229\\u7528\\u8FD9\\u4E9B\\u6587\\u6CD5\\u968F\\u4FBF\\u5D4C\\u5957\\uFF0C\\u5C55\\u5F00\\uFF0C\\u7F16\\u5199\\u4E9B\\u590D\\u6742\\u70B9\\u7684\\u4EE3\\u7801\\u6A21\\u7248\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"any         ::= tabstop | placeholder | choice | variable | text\\ntabstop     ::= '$' int\\n                | '${' int '}'\\n                | '${' int  transform '}'\\nplaceholder ::= '${' int ':' any '}'\\nchoice      ::= '${' int '|' text (',' text)* '|}'\\nvariable    ::= '$' var | '${' var '}'\\n                | '${' var ':' any '}'\\n                | '${' var transform '}'\\ntransform   ::= '/' regex '/' (format | text)+ '/' options\\nformat      ::= '$' int | '${' int '}'\\n                | '${' int ':' '/upcase' | '/downcase' | '/capitalize' '}'\\n                | '${' int ':+' if '}'\\n                | '${' int ':?' if ':' else '}'\\n                | '${' int ':-' else '}' | '${' int ':' else '}'\\nregex       ::= JavaScript Regular Expression value (ctor-string)\\noptions     ::= JavaScript Regular Expression option (ctor-options)\\nvar         ::= [_a-zA-Z] [_a-zA-Z0-9]*\\nint         ::= [0-9]+\\ntext        ::= .*\\n\")), mdx(\"p\", null, \"\\u5BF9\\u4E8E\\u4E4B\\u524D\\u6CA1\\u4E86\\u89E3\\u8FC7\\u4E00\\u70B9\\u6587\\u6CD5\\u6982\\u5FF5\\u7684\\u4EBA\\u6765\\u8BF4\\uFF0C\\u4E5F\\u53EF\\u4EE5\\u4ECE\\u5B98\\u65B9\\u7ED9\\u51FA\\u7684\\u793A\\u4F8B\\u4E2D\\u6478\\u7D22\\u51FA\\u4E0A\\u9762\\u7684\\u6587\\u6CD5\\u7684\\u4F5C\\u7528\\u3002\\u6BD5\\u7ADF\\u7B49\\u53F7\\u5DE6\\u8FB9\\u53EF\\u4EE5\\u66FF\\u6362\\u4E3A\\u53F3\\u8FB9\\uFF0C\\u8FDB\\u884C\\u5C55\\u5F00\\uFF0C\\u5373\\u6587\\u6CD5\\u4E2D\\u7684\\u63A8\\u5BFC\\u3002\"), mdx(\"p\", null, \"\\u5E38\\u7528\\u7684\\u5982\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"${0}\"), \"\\u5BF9\\u5E94\\u4E0A\\u8FF0\\u6587\\u6CD5\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"placeholder\"), \"\\u5360\\u4F4D\\u7B26\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"${a0: haha}\"), \"\\u58F0\\u660E\\u4E86\\u4E00\\u4E2A\\u53D8\\u91CF\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a0\"), \"\\uFF0C\\u8BBE\\u7F6E\\u5176\\u9ED8\\u8BA4\\u503C\\u4E3A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"haha\"), \"\\uFF0C\\u7531\\u4E8E\\u4E0D\\u5B58\\u5728\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a0\"), \"\\u8FD9\\u4E2A\\u53D8\\u91CF\\uFF0C\\u4E4B\\u540E\\u518D\\u901A\\u8FC7\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$a0\"), \"\\u53EA\\u8FD4\\u56DE\\u4E00\\u4E2A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a0\"), \"\\uFF0C\\u5982\\u679C\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"${a0}\"), \"\\u5219\\u8BC6\\u522B\\u4E3A\\u5360\\u4F4D\\u7B26\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"When a variable is unknown (that is, its name isn't defined) the name of the variable is inserted and it is transformed into a placeholder.\")), mdx(\"p\", null, \"\\u800C\\u4E14\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$0\"), \"\\u662F\\u4E00\\u4E2A\\u7279\\u6B8A\\u7684\\u5360\\u4F4D\\u7B26\\uFF0C\\u8868\\u793A\\u5149\\u6807\\u6700\\u540E\\u7684\\u4F4D\\u7F6E\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The number is the order in which tabstops will be visited, whereas $0 denotes the final cursor position. Multiple occurrences of the same tabstop are linked and updated in sync.\")), mdx(\"p\", null, \"\\u4E00\\u4E2A\\u8D85\\u7EA7\\u7B80\\u5355\\u7684\\u4F8B\\u5B50\\uD83C\\uDF30:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"blog post header\\\": {\\n        \\\"prefix\\\": \\\"hea\\\",\\n        \\\"body\\\": [\\n            \\\"---\\\",\\n            \\\"title: \\\\\\\"${1:post-name}\\\\\\\"\\\",\\n            \\\"date: \\\\\\\"${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}\\\\\\\"\\\",\\n            \\\"category: \\\\\\\"${2:category-name}\\\\\\\"\\\",\\n            \\\"tags:\\\",\\n            \\\"- ${3:tag-name}\\\",\\n            \\\"---\\\",\\n            \\\"$4\\\"\\n        ],\\n        \\\"description\\\": \\\"Blog post header template\\\"\\n    }\\n}\\n\")), mdx(\"h3\", null, \"\\u5185\\u7F6E\\u7684\\u53D8\\u91CF\"), mdx(\"p\", null, \"\\u5B9E\\u9645\\u4E0A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"VsCode\"), \"\\u5B9A\\u4E49\\u7684\\u53D8\\u91CF\\u624D\\u6709\\u9ED8\\u8BA4\\u503C\\uFF08\\u6D41\\u7A0B\\u5F97\\u53BB\\u7FFB\\u7FFB\\u6E90\\u7801\\uFF09\\u3002\"), mdx(\"p\", null, \"\\u6587\\u4EF6\\u76F8\\u5173\\u7684\\u53D8\\u91CF(Variable)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"TM_SELECTED_TEXT # The currently selected text or the empty string\\nTM_CURRENT_LINE # The contents of the current line\\nTM_CURRENT_WORD # The contents of the word under cursor or the empty string\\nTM_LINE_INDEX # The zero-index based line number\\nTM_LINE_NUMBER # The one-index based line number\\nTM_FILENAME # The filename of the current document\\nTM_FILENAME_BASE # The filename of the current document without its extensions\\nTM_DIRECTORY # The directory of the current document\\nTM_FILEPATH # The full file path of the current document\\nCLIPBOARD # The contents of your clipboard\\nWORKSPACE_NAME # The name of the opened workspace or folder\\n\")), mdx(\"p\", null, \"\\u65F6\\u95F4\\u76F8\\u5173\\u7684\\u53D8\\u91CF\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"CURRENT_YEAR # The current year\\nCURRENT_YEAR_SHORT # The current year's last two digits\\nCURRENT_MONTH # The month as two digits (example '02')\\nCURRENT_MONTH_NAME # The full name of the month (example 'July')\\nCURRENT_MONTH_NAME_SHORT # The short name of the month (example 'Jul')\\nCURRENT_DATE # The day of the month\\nCURRENT_DAY_NAME # The name of day (example 'Monday')\\nCURRENT_DAY_NAME_SHORT # The short name of the day (example 'Mon')\\nCURRENT_HOUR # The current hour in 24-hour clock format\\nCURRENT_MINUTE # The current minute\\nCURRENT_SECOND # The current second\\nCURRENT_SECONDS_UNIX # The number of seconds since the Unix epoch\\n\")), mdx(\"p\", null, \"\\u6CE8\\u91CA\\u76F8\\u5173\\u7684\\u53D8\\u91CF:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"BLOCK_COMMENT_START # Example output: in PHP /* or in HTML <!--\\nBLOCK_COMMENT_END # Example output: in PHP */ or in HTML -->\\nLINE_COMMENT # Example output: in PHP //\\n\")), mdx(\"h3\", null, \"\\u6539\\u53D8\\u53D8\\u91CF\\u7684\\u503C\"), mdx(\"p\", null, \"\\u6839\\u636E\\u4E0A\\u8FF0\\u7684\\u6587\\u6CD5\\uFF0C\\u901A\\u8FC7\\u6B63\\u5219\\u8868\\u8FBE\\u5F0F\\u53EF\\u4EE5\\u6539\\u53D8\\u9ED8\\u8BA4\\u7684\\u53D8\\u91CF\\u503C\\uFF0C\\u4F8B\\u5982\\u63D2\\u5165\\u5927\\u5199\\u7684\\u6587\\u4EF6\\u540D\\u3002\\u8FD9\\u91CC\\u5B9E\\u9645\\u5339\\u914D\\u7528\\u7684\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JavaScript\"), \"\\u7684\\u6B63\\u5219\\u8868\\u8FBE\\u5F0F\\uFF0C\\u540E\\u8FB9\\u66FF\\u6362\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"format | text\"), \"\\u76F8\\u5F53\\u4E8E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"replace\"), \"\\u65B9\\u6CD5\\uFF08\\u5177\\u4F53\\u6D41\\u7A0B\\u5F97\\u770B\\u6E90\\u7801\\uFF09\\uFF0C\\u800C\\u4F7F\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"${1}\"), \"\\u6765\\u6355\\u83B7\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JavaScript\"), \"\\u6B63\\u5219\\u5339\\u914D\\u7684\\u7B2C\\u4E00\\u4E2A\\u5206\\u7EC4\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"Hpp Header file\\\": {\\n        \\\"prefix\\\": \\\"ifde\\\",\\n        \\\"body\\\": [\\n            \\\"#ifndef ${1:${TM_FILENAME_BASE/(.*)/${1:/upcase}/}}_HPP_INCLUDED\\\",\\n            \\\"#define ${1:${TM_FILENAME_BASE/(.*)/${1:/upcase}/}}_HPP_INCLUDED\\\",\\n            \\\"$2\\\",\\n            \\\"#endif // ${1:${TM_FILENAME_BASE/(.*)/${1:/upcase}/}}_HPP_INCLUDED\\\"\\n        ],\\n        \\\"description\\\": \\\"A simple header\\\"\\n    }\\n}\\n\\n\")), mdx(\"h3\", null, \"\\u624B\\u52A8\\u63D2\\u5165\\u6A21\\u7248\"), mdx(\"p\", null, \"\\u5BF9\\u4E8E\\u6CA1\\u6709\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IntelliSense\"), \"\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"markdown\"), \"\\u6765\\u8BF4\\uFF0C\\u9700\\u8981\\u624B\\u52A8\\u8C03\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<C>-<SHIFT>-<P>\"), \"\\u6765\\u952E\\u5165\\u547D\\u4EE4\\u9009\\u62E9\\u5408\\u9002\\u7684\\u6A21\\u677F\\uFF08\\u4E5F\\u53EF\\u4EE5\\u4E3A\\u63D2\\u5165\\u6A21\\u677F\\u7ED1\\u5B9A\\u4E2A\\u6309\\u952E\\uFF09\\u3002\"), mdx(\"h3\", null, \"Reference\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://code.visualstudio.com/docs/editor/userdefinedsnippets\"\n  }), \"User defined Snippets\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"date":"2020-07-24","title":"VsCode Snippet","category":"dev","tags":["tool"],"slug":"a9bed2b3a3e779a8840404792c199920"},"timeToRead":1,"tableOfContents":{"items":[{"url":"#前言","title":"前言","items":[{"url":"#内置的变量","title":"内置的变量"},{"url":"#改变变量的值","title":"改变变量的值"},{"url":"#手动插入模版","title":"手动插入模版"},{"url":"#reference","title":"Reference"}]}]}}},"pageContext":{"id":"b059a107-da3b-5809-9610-46e18a30b374","previous":{"post":{"id":"fd4750a9-4fde-5ed3-bf68-9611fe635ab5","parent":{"id":"6c7bd922-42ee-5910-8771-c45a0312a13c"},"excerpt":"前言 一个月前还在学校的时候，mock了学校微信小程序的请假页面（现在我毕业了，它完成了其历史使命，被放在电脑硬盘的某个角落里积灰🐶）。在开发的时候，发现抓去下来的页面里的tag标签都是自定义的tag，这引起了我的兴趣，调查下去发现是 Web Component…","slug":"eb910901198bc5fbcb7c94de06a925c1","title":"设计模式-decorator","tags":["design patterns"],"category":"wheels","date":"2020-07-19"}},"next":{"post":{"id":"aeacda36-fd07-5afe-8a34-5d09551c3445","parent":{"id":"927ba655-c65a-51f0-8ad0-6334f695a722"},"excerpt":"前言 笔者的 OSX 版本为 10.15 在编译过程中，有一个文件代码中引用了 OSX 的 AudioToolBox 框架中的 AudioUnitSetParameter 方法，导致一直导致出错，注释掉就好了。 这里记录下编译的过程。 安装SDL 可以通过 homebrew…","slug":"338b5877a9774cf519693a4c3443a5c3","title":"XCode中编译sdlpal","tags":["game"],"category":"xcode","date":"2020-07-25"}}}}}