{"version":3,"sources":["webpack:///./src/components/PostTag/PostTag.jsx","webpack:///./src/templates/Tag/Tag.jsx","webpack:///./src/templates/tag.jsx","webpack:///./src/components/PostBox/PostBox.jsx"],"names":["StyledLink","Link","StyledDiv","PostTag","props","to","kebabCase","tag","sx","border","borderColor","borderRadius","backgroundColor","color","undefined","count","lineHeight","StyledTagListHeader","StyledTagList","Tag","render","this","data","posts","edges","totalCount","activeTag","SEO","title","isBlogPost","className","map","node","key","slug","PostBox","post","Component","tagQuery","TagWrapper","pageContext","StyledPostBox","fields","intro","tags","category","date","timeToRead","fontSize","fontWeight","fontStyle","backgroundSize","display","backgroundImage","backgroundRepeat","transition","paddingRight","my","paddingLeft","flexFlow","length","index"],"mappings":"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","file":"component---src-templates-tag-jsx-926bd6e269618b0598ae.js","sourcesContent":["/**@jsx jsx */\nimport { jsx } from 'theme-ui';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport kebabCase from 'lodash/kebabCase';\nimport { Link } from 'gatsby';\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  height: 25px;\n  text-align: center;\n  padding: 0 10px;\n  transition: color 100ms ease-out;\n  font-size: 14px;\n`;\n\nconst StyledDiv = styled.div`\n  margin-left: 5px;\n  display: inline-block;\n  height: 16px;\n  text-align: center;\n  min-width: 25px;\n  padding-left: 2px;\n  padding-right: 2px;\n  font-size: 12px;\n  font-weight: bold;\n  border-radius: 1rem;\n`;\n\nexport default function PostTag(props) {\n  return (\n    <StyledLink\n      to={`/tags/${kebabCase(props.tag)}`}\n      sx={{\n        border: '1px solid',\n        borderColor: 'offblack',\n        borderRadius: 1,\n        backgroundColor: 'background',\n        color: 'offblack',\n        '&:hover': {\n          color: 'primary',\n          borderColor: 'primary',\n        },\n      }}\n    >\n      {props.tag}\n      {props.count !== undefined && (\n        <StyledDiv\n          sx={{\n            color: 'white',\n            backgroundColor: 'primary',\n          }}\n        >\n          <p\n            sx={{\n              lineHeight: 'dense',\n            }}\n          >\n            {props.count}\n          </p>\n        </StyledDiv>\n      )}\n    </StyledLink>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'gatsby';\nimport Layout from '../../layout/Home';\nimport PostBox from '../../components/PostBox/PostBox';\nimport styled from '@emotion/styled';\nimport SEO from '../../components/SEO/SEO';\n\nconst StyledTagListHeader = styled.div`\n  > .tag__prefix {\n    font-size: 70%;\n    text-transform: uppercase;\n  }\n  > .tag__name {\n    font-size: 150%;\n    font-weight: 300;\n    letter-spacing: 0;\n  }\n`;\n\nconst StyledTagList = styled.ul`\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 1em 0;\n`;\n\nconst StyledLink = styled(Link)`\n  color: #3fa9f5;\n  text-decoration: none;\n`;\n\nexport default class Tag extends Component {\n  render() {\n    const { data, tag } = this.props;\n    const { edges, totalCount } = data.posts;\n    return (\n      <Layout activeTag={'tags'}>\n        <SEO title={tag + '- Tag'} isBlogPost={false} />\n        <StyledTagListHeader>\n          <div className=\"tag__prefix\">\n            {totalCount} post{totalCount === 1 ? '' : 's'} tagged with\n          </div>\n          <h1 className=\"tag__name\">{tag}</h1>\n        </StyledTagListHeader>\n        <StyledTagList>\n          {edges.map(({ node }) => {\n            return (\n              <li key={node.slug}>\n                <PostBox post={node} />\n              </li>\n            );\n          })}\n        </StyledTagList>\n        <StyledLink to=\"/tags\">All tags</StyledLink>\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Tag from './Tag/Tag';\n\nconst TagWrapper = ({ pageContext: { tag }, data }) => <Tag tag={tag} data={data} />;\nTagWrapper.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    posts: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            slug: PropTypes.string.isRequired,\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const tagQuery = graphql`\n  query($tag: String) {\n    posts: allBlogPost(filter: { tags: { in: [$tag] } }) {\n      totalCount\n      edges {\n        node {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          excerpt\n          slug\n          tags\n          category\n        }\n      }\n    }\n  }\n`;\n\nexport default TagWrapper;\n","/**@jsx jsx */\nimport { jsx } from 'theme-ui';\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Tag from '../PostTag/PostTag';\nimport kebabCase from 'lodash/kebabCase';\nimport styled from '@emotion/styled';\n\nconst StyledPostBox = styled.div`\n  margin-top: 1rem;\n  box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  min-height: 133px;\n  padding-left: 1.6rem;\n  padding-right: 1rem;\n  padding-top: 0.5rem;\n  padding-bottom: 1.1rem;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-evenly;\n  transition: all 200ms ease-in;\n  &:hover {\n    transform: translateY(-4px);\n  }\n  .row1 {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n  }\n  .row2 {\n    margin-top: 0.3rem;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: center;\n  }\n  > .row3 {\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: space-around;\n  }\n`;\n\nexport default function PostBox({ post }) {\n  const fields = post.fields || {};\n  const slug = post.slug || fields.slug;\n  const title = post.title || fields.title;\n  const intro = post.intro;\n  const tags = post.tags || fields.tags || [];\n  const category = post.category || fields.category || 'MISC';\n  const date = post.date || fields.date;\n  const timeToRead = post.timeToRead || null;\n  return (\n    <StyledPostBox\n      sx={{\n        backgroundColor: 'offwhite',\n      }}\n    >\n      <div className=\"row1\">\n        <div>\n          <Link\n            to={`/categories/${kebabCase(category)}`}\n            sx={{\n              fontSize: 1,\n              color: 'black',\n              fontWeight: 'semibold',\n              fontStyle: 'italic',\n              '&:hover': {\n                color: 'primary',\n              },\n            }}\n          >\n            <h3>{category}</h3>\n          </Link>\n        </div>\n        {timeToRead && (\n          <div\n            sx={{\n              fontSize: 1,\n              color: 'offblack',\n            }}\n          >\n            <p>{timeToRead} min read</p>\n          </div>\n        )}\n      </div>\n      <div className=\"row2\">\n        <Link\n          to={`/post/${slug}`}\n          sx={{\n            color: 'black',\n            fontSize: 4,\n            '&:hover>h2': {\n              backgroundSize: '77% 100%',\n            },\n            '&>h2': {\n              display: 'inline',\n              backgroundImage:\n                'linear-gradient(to bottom,transparent 50%,hsl(260, 100%, 80%) 50%,hsl(260, 100%, 80%) 85%,transparent 85%,transparent 100%)',\n              backgroundRepeat: 'no-repeat',\n              backgroundSize: '0 100%',\n              transition: '.5s cubic-bezier(.6,.04,.35,1)',\n            },\n          }}\n        >\n          <h2>{title}</h2>\n        </Link>\n        <div\n          sx={{\n            paddingRight: '0.5rem',\n            fontSize: 1,\n            color: 'offblack',\n          }}\n        >\n          <small>{date}</small>\n        </div>\n      </div>\n      <div\n        className=\"intro\"\n        sx={{\n          my: 5,\n        }}\n      >\n        {intro}\n      </div>\n      <div className=\"row3\">\n        <div>\n          <span\n            sx={{\n              color: 'offblack',\n              fontSize: 0,\n              fontWeight: 'lighter',\n            }}\n          >\n            Tags:\n          </span>\n          <ul\n            sx={{\n              paddingLeft: 1,\n              display: 'inline-flex',\n              flexFlow: 'row wrap',\n            }}\n          >\n            {tags.length > 0 &&\n              tags.map((tag, index) => {\n                return (\n                  <li\n                    key={index}\n                    sx={{\n                      paddingLeft: 1,\n                    }}\n                  >\n                    <Tag tag={tag} />\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </StyledPostBox>\n  );\n}\n"],"sourceRoot":""}