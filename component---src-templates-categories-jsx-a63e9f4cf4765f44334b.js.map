{"version":3,"sources":["webpack:///./src/components/CategoryBox/CategoryBox.jsx","webpack:///./src/templates/Category/Categories.jsx","webpack:///./src/templates/categories.jsx"],"names":["CategoryBoxWrapper","CategoryBox","data","categoryName","totalCount","latestPost","slug","date","postTitle","title","sx","flex","fontStyle","fontWeight","to","kebabCase","color","textDecoration","pl","fontSize","px","StyledList","Categories","render","categories","this","props","activeTag","SEO","isBlogPost","map","category","fieldValue","posts","post","key","className","Component","CategoriesWrapper","pageContext"],"mappings":"oMAOMA,EAAkB,yNAYT,SAASC,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAC5BC,EAAyCD,EAAzCC,aAAcC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAC1BC,EAAiCD,EAAjCC,KAAMC,EAA2BF,EAA3BE,KAAaC,EAAcH,EAArBI,MACpB,OACE,YAACT,EAAD,KACE,mBACEU,GAAI,CACFC,KAAM,IACNC,UAAW,SACXC,WAAY,aAGd,YAAC,OAAD,CACEC,GAAI,eAAiBC,IAAUZ,GAC/BO,GAAI,CACFM,MAAO,UACP,UAAW,CACTC,eAAgB,eAInBd,EAAc,KAhBnB,IAkBIC,EAlBJ,KAoBA,mBACEM,GAAI,CACFQ,GAAI,EACJC,SAAU,IAGZ,mCACA,oBAAMT,GAAI,CAAEU,GAAI,EAAGP,WAAY,aAC7B,YAAC,OAAD,CACEC,GAAI,UAAYR,EAChBI,GAAI,CACFO,eAAgB,cAGjBT,IAGL,6BAAcD,K,gBCtDtB,IAAMc,EAAU,gMAWKC,E,gLACnBC,OAAA,WAAU,IACAC,EAAeC,KAAKC,MAAMxB,KAA1BsB,WACR,OACE,YAAC,IAAD,CAAQG,UAAW,cACjB,YAACC,EAAA,EAAD,CAAKnB,MAAM,aAAaoB,YAAY,IACpC,wCACA,YAACR,EAAD,KACGG,EAAWM,KAAI,SAACC,GACf,IAAM5B,EAAe4B,EAASC,WACxB5B,EAAa2B,EAAS3B,WACtBC,EAAa0B,EAASE,MAAM,GAAGC,KACrC,OACE,kBAAIC,IAAKJ,EAASC,WAAYI,UAAU,oBACtC,YAACnC,EAAD,CACEC,KAAM,CACJC,aAAcA,EACdC,WAAYA,EACZC,WAAYA,Y,GAlBQgC,aCDzBC,UAbW,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OAAqB,YAAC,EAAD,CAAYrC,KAAMqC","file":"component---src-templates-categories-jsx-a63e9f4cf4765f44334b.js","sourcesContent":["/**@jsx jsx */\nimport { jsx } from 'theme-ui';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nconst CategoryBoxWrapper = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  width: 100%;\n  align-content: space-around;\n  align-items: center;\n\n  @media screen and (min-width: 960px) {\n    flex-flow: row nowrap;\n  }\n`;\n\nexport default function CategoryBox({ data }) {\n  const { categoryName, totalCount, latestPost } = data;\n  const { slug, date, title: postTitle } = latestPost;\n  return (\n    <CategoryBoxWrapper>\n      <div\n        sx={{\n          flex: '1',\n          fontStyle: 'italic',\n          fontWeight: 'semibold',\n        }}\n      >\n        <Link\n          to={`/categories/` + kebabCase(categoryName)}\n          sx={{\n            color: 'primary',\n            '&:hover': {\n              textDecoration: 'underline',\n            },\n          }}\n        >\n          {categoryName}{' '}\n        </Link>\n        ({totalCount})\n      </div>\n      <div\n        sx={{\n          pl: 1,\n          fontSize: 1,\n        }}\n      >\n        <span>latest:</span>\n        <span sx={{ px: 1, fontWeight: 'semibold' }}>\n          <Link\n            to={'/posts/' + slug}\n            sx={{\n              textDecoration: 'underline',\n            }}\n          >\n            {postTitle}\n          </Link>\n        </span>\n        <span>&bull; {date}</span>\n      </div>\n    </CategoryBoxWrapper>\n  );\n}\n","import React, { Component } from 'react';\nimport styled from '@emotion/styled';\n\nimport Layout from '../../layout/Home';\nimport CategoryBox from '../../components/CategoryBox/CategoryBox';\nimport SEO from '../../components/SEO/SEO';\n\nconst StyledList = styled.ul`\n  padding-left: 2rem;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: flex-start;\n  > .categories__item {\n    width: 100%;\n    margin-top: 1rem;\n  }\n`;\n\nexport default class Categories extends Component {\n  render() {\n    const { categories } = this.props.data;\n    return (\n      <Layout activeTag={'categories'}>\n        <SEO title=\"Categories\" isBlogPost={false} />\n        <h3>All Categories</h3>\n        <StyledList>\n          {categories.map((category) => {\n            const categoryName = category.fieldValue;\n            const totalCount = category.totalCount;\n            const latestPost = category.posts[0].post;\n            return (\n              <li key={category.fieldValue} className=\"categories__item\">\n                <CategoryBox\n                  data={{\n                    categoryName: categoryName,\n                    totalCount: totalCount,\n                    latestPost: latestPost,\n                  }}\n                />\n              </li>\n            );\n          })}\n        </StyledList>\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Categories from './Category/Categories';\n\nconst CategoriesWrapper = ({ pageContext }) => <Categories data={pageContext} />;\n\nCategoriesWrapper.propTypes = {\n  pageContext: PropTypes.shape({\n    categories: PropTypes.arrayOf(\n      PropTypes.shape({\n        fieldValue: PropTypes.string.isRequired,\n        totalCount: PropTypes.number.isRequired,\n      }).isRequired\n    ),\n  }),\n};\n\nexport default CategoriesWrapper;\n"],"sourceRoot":""}